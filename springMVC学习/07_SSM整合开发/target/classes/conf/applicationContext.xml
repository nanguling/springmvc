<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--spring配置文件，声明service，dao，工具类等对象-->

    <!--声明数据库属性配置文件-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>

    <!--声明数据源，连接数据库-->
    <bean name="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.un}"/>
        <property name="password" value="${jdbc.pw}"/>
        <property name="maxActive" value="${jdbc.max}"/>
    </bean>

    <!--声明SqlSessionFactory对象，使用SqlSessionFactoryBean类创建-->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--声明数据源-->
        <property name="dataSource" ref="myDataSource"/>
        <!--指定mybatis主配置文件-->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>

    <!--声明dao对象，通过MapperScannerConfigurer类在其内部调用getMapper()方法创建-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定sqlSessionFactory的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定dao所在的包名，sqlSessionFactory会为这包中每一个dao执行一次getMapper()方法-->
        <property name="basePackage" value="com.mystudy.dao"/>
    </bean>

    <!--声明service对象-->
    <context:component-scan base-package="com.mystudy.service.impl"/>

    <!--事务的配置：注解配置，aspect的配置-->
</beans>